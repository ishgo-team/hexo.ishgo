

// CSS3 PROPERTIES
// --------------------------------------------------

// Border Radius
.border-radius(@radius) {
	-webkit-border-radius: @radius;
	   -moz-border-radius: @radius;
			border-radius: @radius;

	-webkit-background-clip: padding-box;
	   -moz-background-clip: padding;
			background-clip: padding-box;
}


// Single Corner Border Radius
.border-top-left-radius(@radius) {
	-webkit-border-top-left-radius: @radius;
		-moz-border-radius-topleft: @radius;
			border-top-left-radius: @radius;
}
.border-top-right-radius(@radius) {
	-webkit-border-top-right-radius: @radius;
		-moz-border-radius-topright: @radius;
			border-top-right-radius: @radius;
}
.border-bottom-right-radius(@radius) {
	-webkit-border-bottom-right-radius: @radius;
		-moz-border-radius-bottomright: @radius;
			border-bottom-right-radius: @radius;
}
.border-bottom-left-radius(@radius) {
	-webkit-border-bottom-left-radius: @radius;
		-moz-border-radius-bottomleft: @radius;
			border-bottom-left-radius: @radius;
}


// Single Side Border Radius
.border-top-radius(@radius) {
	.border-top-right-radius(@radius);
	.border-top-left-radius(@radius);
}
.border-right-radius(@radius) {
	.border-top-right-radius(@radius);
	.border-bottom-right-radius(@radius);
}
.border-bottom-radius(@radius) {
	.border-bottom-right-radius(@radius);
	.border-bottom-left-radius(@radius);
}
.border-left-radius(@radius) {
	.border-top-left-radius(@radius);
	.border-bottom-left-radius(@radius);
}


// Drop shadows
.text-shadow (@string: 0 1px 3px rgba(0, 0, 0, 0.25)) {
	text-shadow: @string;
}

.box-shadow(@shadowA, @shadowB:X, ...){
	// Multiple shadow solution from http://toekneestuck.com/blog/2012/05/15/less-css-arguments-variable/
	@props: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;
	-webkit-box-shadow: @props;
	   -moz-box-shadow: @props;
			box-shadow: @props;
}

.drop-shadow (@x: 0, @y: 1px, @blur: 2px, @spread: 0, @alpha: 0.25) {
	-webkit-box-shadow:	@x @y @blur @spread rgba(0, 0, 0, @alpha);
	   -moz-box-shadow:	@x @y @blur @spread rgba(0, 0, 0, @alpha);
			box-shadow:	@x @y @blur @spread rgba(0, 0, 0, @alpha);
}
.inner-shadow (@x: 0, @y: 1px, @blur: 2px, @spread: 0, @alpha: 0.25) {
	-webkit-box-shadow: inset @x @y @blur @spread rgba(0, 0, 0, @alpha);
	   -moz-box-shadow: inset @x @y @blur @spread rgba(0, 0, 0, @alpha);
			box-shadow: inset @x @y @blur @spread rgba(0, 0, 0, @alpha);
}


// Transitions
.transition(@transition) {
	-webkit-transition: @transition;
	   -moz-transition: @transition;
		 -o-transition: @transition;
			transition: @transition;
}
.transition-delay(@transition-delay) {
	-webkit-transition-delay: @transition-delay;
	   -moz-transition-delay: @transition-delay;
		 -o-transition-delay: @transition-delay;
			transition-delay: @transition-delay;
}

.transition-property(@propertyA, @propertyB:X, ...) {
	@props: ~`"@{arguments}".replace(/[\[\]]|\,\sX/g, '')`;
	 -webkit-transition-property: @props;
		-moz-transition-property: @props;
		  -o-transition-property: @props;
			 transition-property: @props;
}

.transition-duration(@duration) {
	 -webkit-transition-duration: @duration;
		-moz-transition-duration: @duration;
		  -o-transition-duration: @duration;
			 transition-duration: @duration;
}

.transition-timing-function(@function) {
	 -webkit-transition-timing-function: @function;
		-moz-transition-timing-function: @function;
		  -o-transition-timing-function: @function;
			 transition-timing-function: @function;
}


// Transformations
.transform(@transform) {
	 -webkit-transform: @transform;
		-moz-transform: @transform;
		 -ms-transform: @transform;
		  -o-transform: @transform;
			 transform: @transform;
}

.transform-origin(@origin) {
	 -webkit-transform-origin: @origin;
		-moz-transform-origin: @origin;
		 -ms-transform-origin: @origin;
		  -o-transform-origin: @origin;
			 transform-origin: @origin;
}

.transform-origin(@style) {
	 -webkit-transform-style: @style;
		-moz-transform-style: @style;
		 -ms-transform-style: @style;
		  -o-transform-style: @style;
			 transform-style: @style;
}

.rotate(@degrees) {
	-webkit-transform: rotate(@degrees);
	   -moz-transform: rotate(@degrees);
		-ms-transform: rotate(@degrees);
		 -o-transform: rotate(@degrees);
			transform: rotate(@degrees);
}
.scale(@ratio) {
	-webkit-transform: scale(@ratio);
	   -moz-transform: scale(@ratio);
		-ms-transform: scale(@ratio);
		 -o-transform: scale(@ratio);
			transform: scale(@ratio);
}
.translate(@x, @y) {
	-webkit-transform: translate(@x, @y);
	   -moz-transform: translate(@x, @y);
		-ms-transform: translate(@x, @y);
		 -o-transform: translate(@x, @y);
			transform: translate(@x, @y);
}
.skew(@x, @y) {
	-webkit-transform: skew(@x, @y);
	   -moz-transform: skew(@x, @y);
		-ms-transform: skewX(@x) skewY(@y); // See https://github.com/twitter/bootstrap/issues/4885
		 -o-transform: skew(@x, @y);
			transform: skew(@x, @y);
}
.translate3d(@x, @y, @z) {
	-webkit-transform: translate3d(@x, @y, @z);
	   -moz-transform: translate3d(@x, @y, @z);
		 -o-transform: translate3d(@x, @y, @z);
			transform: translate3d(@x, @y, @z);
}


// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden
// See git pull https://github.com/dannykeane/bootstrap.git backface-visibility for examples
.backface-visibility(@visibility){
	-webkit-backface-visibility: @visibility;
	   -moz-backface-visibility: @visibility;
			backface-visibility: @visibility;
}


// Background clipping
// Heads up: FF 3.6 and under need "padding" instead of "padding-box"
.background-clip(@clip) {
	-webkit-background-clip: @clip;
	   -moz-background-clip: @clip;
			background-clip: @clip;
}

// Background sizing
.background-size(@size){
	-webkit-background-size: @size;
	   -moz-background-size: @size;
		 -o-background-size: @size;
			background-size: @size;
}


// Box sizing
.box-sizing(@boxmodel) {
	-webkit-box-sizing: @boxmodel;
	   -moz-box-sizing: @boxmodel;
			box-sizing: @boxmodel;
}

// User select
// For selecting text on the page
.user-select(@select) {
	-webkit-user-select: @select;
	   -moz-user-select: @select;
		-ms-user-select: @select;
		 -o-user-select: @select;
			user-select: @select;
}

// Resize anything
.resizable(@direction) {
	resize: @direction; // Options: horizontal, vertical, both
	overflow: auto; // Safari fix
}

// CSS3 Content Columns
.content-columns(@columnCount, @columnGap: @gridGutterWidth) {
	-webkit-column-gap: @columnGap;
	   -moz-column-gap: @columnGap;
			column-gap: @columnGap;
}

// Optional hyphenation
.hyphens(@mode: auto) {
	word-wrap: break-word;
	-webkit-hyphens: @mode;
	   -moz-hyphens: @mode;
		-ms-hyphens: @mode;
		 -o-hyphens: @mode;
			hyphens: @mode;
}

// Animation
.animation(@animation) {
	 -webkit-animation: @animation;
		-moz-animation: @animation;
		 -ms-animation: @animation;
		  -o-animation: @animation;
			 animation: @animation;
}

.animation-name(@name) {
	 -webkit-animation-name: @name;
		-moz-animation-name: @name;
		 -ms-animation-name: @name;
		  -o-animation-name: @name;
			 animation-name: @name;
}

.animation-duration(@duration) {
	 -webkit-animation-duration: @duration;
		-moz-animation-duration: @duration;
		 -ms-animation-duration: @duration;
		  -o-animation-duration: @duration;
			 animation-duration: @duration;
}

.animation-timing-function(@function) {
	 -webkit-animation-timing-function: @function;
		-moz-animation-timing-function: @function;
		 -ms-animation-timing-function: @function;
		  -o-animation-timing-function: @function;
			 animation-timing-function: @function;
}

.animation-delay(@delay) {
	 -webkit-animation-delay: @delay;
		-moz-animation-delay: @delay;
		 -ms-animation-delay: @delay;
		  -o-animation-delay: @delay;
			 animation-delay: @delay;
}

.animation-iteration-count(@count) {
	 -webkit-animation-iteration-count: @count;
		-moz-animation-iteration-count: @count;
		 -ms-animation-iteration-count: @count;
		  -o-animation-iteration-count: @count;
			 animation-iteration-count: @count;
}

.animation-direction(@direction) {
	 -webkit-animation-direction: @direction;
		-moz-animation-direction: @direction;
		 -ms-animation-direction: @direction;
		  -o-animation-direction: @direction;
			 animation-direction: @direction;
}

.animation-fill-mode(@mode) {
	 -webkit-animation-fill-mode: @mode;
		-moz-animation-fill-mode: @mode;
		 -ms-animation-fill-mode: @mode;
		  -o-animation-fill-mode: @mode;
			 animation-fill-mode: @mode;
}

// Opacity
.opacity(@value: 0.9) {
	@ieVlue: @value * 100;
	filter: ~"alpha(opacity=@{ieVlue})";
	opacity: @value;
}

// Selection
.selection(@bgColor: @selectionBgColor, @color: @white) {
	::-webkit-selection {
		background: @bgColor;
		color: @color;
	}
	::-moz-selection {
		background: @bgColor;
		color: @color;
	}
	::selection {
		background: @bgColor;
		color: @color;
	}
}